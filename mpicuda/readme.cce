#!/bin/bash

# Based on PrgEnv-cray/1.0.0 ----

## Setup ----
# module use $APPS/easybuild/modules/all
module help PrgEnv-cray

# module use $APPS/easybuild/modules/all
module purge
module load craype-haswell
module load PrgEnv-cray
module load craype-accel-nvidia35
module load GCC/4.8.2-EB 
# XXX Remark:
# XXX The a gnu compiler 4.8.x is needed in order to provide a libstdc++.so 
# XXX compatible with GLIBCXX_3.4.15 as required by the 'PrgEnv-cray'.
# XXX This will prevent the following error: 
# XXX   /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.15' not found

module list -t
	# Currently Loaded Modulefiles:
	# craype-haswell
	# craype/2.3.0
	# cce/8.3.13.103
	# mvapich2_cce/2.0.1_cray83
	# cray-libsci/13.0.3
	# craype-network-infiniband
	# cudatoolkit/6.5.14
	# PrgEnv-cray/1.0.0
	# cray-libsci_acc/3.1.2
	# craype-accel-nvidia35
        # GCC/4.8.2-EB

## Compile ----
mkdir -p CRAY
cd CRAY
nvcc -arch=sm_37 -c ../src/mpicu.cu
cc -c ../src/mpic.c 
cc mpic.o mpicu.o -lstdc++ -o mpi_cuda_test.exe
# XXX Remark: 
# XXX Linking with cc widhout adding -lstdc++ will fail
# XXX with the following error message:
# XXX   - undefined reference to __gxx_personality_v0
# XXX the suggested workaround is to link with CC instead of cc or to add -lstdc++

ldd mpi_cuda_test.exe 
ldd mpi_cuda_test.exe | grep "not found"

## Run ----
export OMP_NUM_THREADS=1
srun --gres=gpu:1 --exclusive -n1 mpi_cuda_test.exe 12
	# 0 6 11
	# 0 606 1111 
	# 
	# Process 0 on keschcn-0009 out of 1 Device 0 (Tesla K80)
	# Device 0: "Tesla K80"
	#   CUDA Driver Version / Runtime Version     6.5 / 6.5
	#   CUDA Capability Major/Minor version number:    3.7
	#   NVRM version: NVIDIA UNIX x86_64 Kernel Module  340.87  Thu Mar 19 23:39:02 PDT 2015
